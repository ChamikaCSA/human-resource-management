// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Supervisor
  Subordinate
}

model User {
  id              String   @id @default(uuid())
  firstName       String
  lastName        String
  email           String   @unique
  birthDate       DateTime
  phoneNumber     String
  jobTitle        String?
  department      String?
  employmentType  String?
  workLocation    String?
  password        String
  leaveBalanceMedical Int @default(6)
  leaveBalanceCasual  Int @default(6)
  posts           Post[]
  leaves          Leave[]
  role            Role
  createdAt       DateTime @default(now())
  supervisorId    String?
  supervisor      User?    @relation("UserSupervisor", fields: [supervisorId], references: [id])
  subordinates    User[]   @relation("UserSupervisor")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  views     Int      @default(0)
  likes     Int      @default(0)
  comments  Int      @default(0)
  shares    Int      @default(0)
}

model Leave {
  id                  String   @id @default(uuid())
  leaveType           String
  startDate           DateTime
  startDateStartTime  String
  startDateEndTime    String
  endDate             DateTime
  endDateStartTime    String
  endDateEndTime      String
  comments            String
  status              String
  userId              String
  createdAt           DateTime @default(now())
  duration            Float
  user                User     @relation(fields: [userId], references: [id])
}

